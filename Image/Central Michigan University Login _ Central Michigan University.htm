<!DOCTYPE html>
<!-- saved from url=(0031)https://sso.cmich.edu/my.policy -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="cache-control" content="no-cache">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link rel="stylesheet" type="text/css" href="./Central Michigan University Login _ Central Michigan University_files/bootstrap.min.css" media="screen">
    <link rel="stylesheet" type="text/css" href="./Central Michigan University Login _ Central Michigan University_files/login.min.css" media="screen">
    <link rel="stylesheet" type="text/css" href="./Central Michigan University Login _ Central Michigan University_files/cmich_icons.css" media="all">
    <link rel="stylesheet" type="text/css" href="./Central Michigan University Login _ Central Michigan University_files/fonts.css" media="screen">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/png" href="https://cdn.cmich.edu/media/img/favicon.png">
    <title>Central Michigan University Login | Central Michigan University</title>
    <style>
        .glyphicon-refresh-animate {
            -animation: spin 1.5s infinite linear;
            -webkit-animation: spin2 1.5s infinite linear;
        }

        @-webkit-keyframes spin2 {
            from { -webkit-transform: rotate(0deg);}
            to { -webkit-transform: rotate(360deg);}
        }

        @keyframes spin {
            from { transform: scale(1) rotate(0deg);}
            to { transform: scale(1) rotate(360deg);}
        }
        ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
          color: #eee;
          opacity: 1; /* Firefox */
        }

        :-ms-input-placeholder { /* Internet Explorer 10-11 */
          color: #eee;
        }

        ::-ms-input-placeholder { /* Microsoft Edge */
          color: #eee;
        }
        // Center Duo iFrame
        #tp_frame {
            margin: auto;
        }
    </style>
    <script type="text/javascript" src="./Central Michigan University Login _ Central Michigan University_files/session_check.js"></script>
    <script type="text/javascript">
        if(!String.prototype.trim){ String.prototype.trim = function() { return this.replace(/^\s+|\s+$/g, ""); }; }
        function isU( v ){ return typeof(v) == "undefined"; }
        if(!Array.indexOf){ Array.prototype.indexOf = function(obj) { for( var k in this ){ if( isFinite( k ) && this[k] == obj ){ return parseInt(k); } } return -1; } }

        // FUNCTIONS
        window.onload=function() {
            //disallow frames
            if(self != top) { top.location = self.location; }
            window.onerror=function(){ return function(){ return; } }
            /* ATTENTION: if you want random backgrounds please uncomment two lines below, replace backgroundXX.jpg with your customized values */
            GLB.bgpics = ["/public/images/customization/Common/SFA-AP_general_ui/image00_en.png"];
            changeCSS("apm.css", "body#f5-apm-logon", "backgroundImage", "url("+GLB.bgpics[Math.floor(Math.random()*(GLB.bgpics.length + 1))]+")");
            // iterate inputs
            for( var i=0; i < GLB.is.length; i++ ){
                prepareInputs( GLB.is[i] );
                GLB.items += GLB.is[i].items;
                GLB.inputs += ( GLB.is[i].type == "none" ? 0 : 1 );
            }
            // change size to fit all inputs, msie requires two assignments
            GLB.items += GLB.recaptcha * 5;
            GLB.items += GLB.origUri;
            changeHeight();
            // GLB
            GLB.form = document.getElementById( GLB.formId );
            GLB.header = document.getElementById( GLB.headerId );
            GLB.ul = document.getElementById( GLB.ulId );
            GLB.submit = document.getElementById( GLB.submitId );
            // compartibily function, works only with input[0] text username and input[1] text password
            GLB.ecCompartible = ( GLB.inputs == 2 && GLB.is[0].type == "text" && GLB.is[0].name == "username" && GLB.is[1].type == "password" && GLB.is[1].name == "password" );
            // SFT
            // SFT.getInput();
            // GLB.header.innerHTML = ( SFT.fieldId != "" && GLB.headerStr != "" && edgeClientSoftTokenSupport()) ? SFT.headerStr : "Central Michigan University<br>MFA Pilot".replace('<br>','');
            //
            checkExternalAddCheckbox();
            // window.setTimeout("sessionTimeoutCheck(sessionTimedOut)", globalTimoutInterval); // what???
            
            document.getElementById("field-1").focus();

            var cmichmfa_input1 = document.getElementById("field-1");
            if (cmichmfa_input1.name == "_F5_challenge") {
                cmichmfa_input1.labels[0].innerText = "Central Michigan University<br>MFA Pilot"
            }
        }

        function prepareInputs( is ){
            is.items = 1;
            // split sessionvalues
            if( is.type == "select" || is.type == "radio" ){
                is.svSplit = ( is.svSess.trim() == "" ) ? is.sv.split(";") : is.svSess.split(";"); // get var / sess var
                if( is.svSplit.length == 1 && is.svSplit[0] == "" ){ is.svSplit = []; }
                // match customization to pairs
                for(var i=0; i<is.svSplit.length; i++){
                     is.svCustPairs[is.svSplit[i]] = is.svSplit[i];
                }
                // split customization, create pairs
                var pairs = is.svCust.trim().split(";");
                for(var i=0; i<pairs.length; i++){
                    if(pairs[i].indexOf("=>") != -1){
                        pairs[i] = pairs[i].split("=>");
                        if( !isU( is.svCustPairs[pairs[i][0]] ) && pairs[i][1].trim() != ""){
                            is.svCustPairs[pairs[i][0]] = pairs[i][1];
                        }
                    }
                }
            }
            // patch ids
            if( is.type == "none" ){
                is.items = ( is.ids = [] ).length;
            }else if( is.type == "password" ){
                is.ids[1] = is.ids[0] + "---blur";
            }else if( is.type == "radio" ){
                var ht = { li: document.getElementById( is.ids[0].replace("field","field-container") ), div: null, radio: null, label: null };
                is.items = is.svSplit.length;
                for( var i=is.items-1; i>=0; i-- ){
                    is.ids[i] = is.ids[0] + "-" + i;
                    // create actual radios
                    ht.div = ht.li.insertBefore( celm( { tag: "div", id: is.ids[i]+"-container", className: "radio-container" } ), ht.div );
                    ht.label = ht.div.appendChild( celm( { tag: "label", id: is.ids[i]+"-label", htmlFor: is.ids[i], className: is.type } ) );
                    ht.label.appendChild( document.createTextNode( is.svCustPairs[is.svSplit[i]] ) );
                    ht.radio = ht.div.appendChild( celm( { tag: "input", type: is.type, className: is.type, name: is.name, id: is.ids[i], value: is.svSplit[i] } ) );
                }
            }
            // collect inputs
            is.inps = [];
            for(var i=0; i<is.ids.length; i++){
                is.inps[i] = document.getElementById(is.ids[i] );
                // disable
                if( is.rw != 1 ){ is.inps[i].disabled = true; }
            }
            // patch fields: add options, change filters etc
            // switch( is.type ){
            //     case "text":
            //         is.inps[0].value = (is.rw == 1 ? is.caption : is.value);
            //         if( is.rw == 1 ){
            //             is.inps[0].onfocus = function(_is){ return function(){ textFocus(_is, true); } }(is);
            //             is.inps[0].onblur = function(_is){ return function(){ textFocus(_is, false); } }(is);
            //         }else{
            //             is.inps[0].className = is.inps[0].className.replace( SCL.blur, "" );
            //         }
            //     break;
            //     case "password":
            //         if( is.rw == 1 ){
            //             is.inps[1].onfocus = function(_is){ return function(){ passwordFocus(_is, true); } }(is);
            //             is.inps[1].value = is.caption;
            //             is.inps[0].onblur = function(_is){ return function(){ passwordFocus(_is, false); } }(is);
            //         }else{
            //             is.inps[0].value = is.value;
            //             is.inps[0].className = is.inps[0].className.replace( SCL.none, "" );
            //             is.inps[1].className += SCL.none;
            //         }
            //     break;
            //     case "checkbox":
            //         if( is.value.trim() == "" ){ is.value = 1; }
            //         is.inps[0].value = is.value;
            //         if( is.rw != 1 ){
            //             is.inps[0].checked = 1;
            //         }
            //     break;
            //     case "select":
            //         for( var i=0; i<is.svSplit.length; i++ ){
            //             is.inps[0].add( new Option( is.svCustPairs[is.svSplit[i]], is.svSplit[i] ) );
            //         }
            //         if( is.rw != 1 && is.value.trim() != "" ){
            //             if( is.svSplit.indexOf( is.value ) == -1 ){ is.inps[0].add( new Option( is.value, is.value ) ); }
            //             is.inps[0].value = is.value;
            //         }
            //     break;
            //     case "radio":
            //         var i = ( is.rw == 1 ) ? 0 : is.svSplit.indexOf( is.value );
            //         is.inps[( i < 1 ? 0 : i )].checked = true;
            //     break;
            // }
        }

        var SCL = {
            blur: " __blur",
            none: " __none",
            init: "__init"
        }

        function celm( co ){
            var elm = document.createElement(co.tag);
            for( var k in co ){
                if( !co.hasOwnProperty( k ) || k == "tag" ){ continue; }
                elm[k] = co[k];
            }
            return elm;
        }

        function changeHeight( inc ){
            GLB.items += isU( inc ) ? 0 : inc;
            var height = Math.floor(200 + GLB.items*30) + "px" ;
            changeCSS("apm.css", "div#f5-logon-cstrip", "height", height);
            changeCSS("apm.css", "div#f5-logon-contents", "height", height);
        }

        function textFocus( is, isf ){
            if( isf && is.inps[0].value == is.caption ){
                is.inps[0].value = "";
                is.inps[0].className = is.inps[0].className.replace( SCL.blur, "" );
            }else if( "" == is.inps[0].value ){
                if( is.inps[0].className.indexOf( SCL.blur ) == -1 ){ is.inps[0].className += SCL.blur; }
                is.inps[0].value = is.caption;
            }
        }

        function passwordFocus( is, isf ){
            if( isf ){
                is.inps[0].className = is.inps[0].className.replace( SCL.none, "" );
                is.inps[0].focus();
                if( is.inps[1].className.indexOf( SCL.none ) == -1 ){ is.inps[1].className += SCL.none; }
            }else if( "" == is.inps[0].value ){
                if( is.inps[0].className.indexOf( SCL.none ) == -1 ){ is.inps[0].className += SCL.none; }
                is.inps[1].className = is.inps[1].className.replace( SCL.none, "" );
            }
        }

        function changeCSS( cssFile, selector, styleKey, value ){
            var rname = document.all ? 'rules' : 'cssRules';
            var shs = document.styleSheets;
            for( var i=0; i< shs.length; i ++ ){
                if( shs[i].href && shs[i].href.indexOf( cssFile ) != -1 ){
                    var rules = shs[i][rname];
                    for( var j=0; j<rules.length; j++ ){
                        if( rules[j].selectorText.toLowerCase() == selector.toLowerCase() ){
                            rules[j].style[styleKey] = value;
                            return;
                        }
                    }
                }
            }
        }
        //session expired
        /////////////////////////////////////////////////////////////////////////
// function to return the customized screen when session expiration
// is detected on the client-side
/////////////////////////////////////////////////////////////////////////
function SessionExpired_CustomizedScreenGet()
{
  return '<br><h3>Session Expired/Timeout</h3><br>Due to user inactivity, your session expired. Click the following link to start a new session.<br><br><table id="IHoptions"><tr><td><a href="[SESSION_RESTART_URL]" class="option"><img src="/public/images/sq-positive.gif" ></a><a href="[SESSION_RESTART_URL]">Start a new session</a></td></tr></table>';
}
        // session timeout call
        function sessionTimedOut(){
            // restart session automatically upon "submit" for edge-like clients if logon form is compatible
            if ( !isU(window.external) && !isU(window.external.WebLogonResetSession) && GLB.ecCompartible ) {
               GLB.restartOnSubmit = true;
            }else { // display session expired msg for non-compatible forms or non-edge clients
               showSplashLayer("MessageDIV", SessionExpired_CustomizedScreenGet());
            }
        }
        // global variables
        var GLB = {
            txpwTypes: [ "text", "password" ],

            formId: 'f5-logon-auth',
            headerId: "f5-logon-header",
            ulId: "f5-logon-fields",
            submitId: "field-submit",

            form: null,
            header: null,
            ul: null,
            submit: null,
            savePwChk: null,

            is: [ 
{
 type: 'text',
 caption: 'Global ID',
 ids: ['field-1'],
 name:'username',
 rw: 1,
 sv:'',
 svSplit: [],
 svCust: '',
 svCustPairs: [],
 svSess: '',
 inps: [],
 value: ''
},
{
 type: 'password',
 caption: 'Password',
 ids: ['field-2'],
 name:'password',
 rw: 1,
 sv:'',
 svSplit: [],
 svCust: '',
 svCustPairs: [],
 svSess: '',
 inps: [],
 value: ''
},
{
 type: 'none',
 caption: 'Field 3',
 ids: ['field-3'],
 name:'field3',
 rw: 1,
 sv:'',
 svSplit: [],
 svCust: '',
 svCustPairs: [],
 svSess: '',
 inps: [],
 value: ''
},
{
 type: 'none',
 caption: 'Field 4',
 ids: ['field-4'],
 name:'field4',
 rw: 1,
 sv:'',
 svSplit: [],
 svCust: '',
 svCustPairs: [],
 svSess: '',
 inps: [],
 value: ''
},
{
 type: 'none',
 caption: 'Field 5',
 ids: ['field-5'],
 name:'field5',
 rw: 1,
 sv:'',
 svSplit: [],
 svCust: '',
 svCustPairs: [],
 svSess: '',
 inps: [],
 value: ''
} ],
            bgpics: [],

            items: -1,
            inputs: 0,

            recaptcha: parseInt('0'),
            origUri: parseInt('0'),

            ecCompartible: false,
            doNotAutoSubmit: false,
            doAutoSubmit: false
        }
/*
        var SFT = {
            input: null,
            fieldId: "",
            state: "" ? "" : "SECURID_AUTH_STATE_START" ,
            newPin: "",
            headerStr: "",
            restartOnSubmit: false,
            // find field for sft
            getInput: function(){
                for( var i=0; i<GLB.is.length; i++ ){
                    if( GLB.is[i].name == SFT.fieldId ){ return SFT.input = GLB.inputs[i]; }
                }
            },
            ecTokenSupport: !isU( window.external ) && !isU( window.external.WebLogonSoftTokenSupport ),
            onEcSubmit: function(){
                if( !SFT.ecTokenSupport || !GLB.form ){ return; }
                var challengeMode = ( inputs.length >= 2 && inputs[0].name == "_F5_challenge" && inputs[0].type == "password" );
                var hid = GLB.form.appendChild( celm({ tag: "hidden", name: "softTokenError" }) );
                //
                try{
                    window.external.WebLogonSoftTokenState.state = SFT.state;
                    if( SFT.input != null || challengeMode ){ //normal mode : challenge mode
                        window.external.WebLogonSoftTokenPIN = SFT.input != null ? SFT.input.inp[0].value : GLB.is[0].value; // or is[0].inp.value ???
                        if( window.external.WebLogonSoftTokenPasscode ){
                            SFT.input.inp[1].focus();
                            SFT.input.inp[0].value = window.external.WebLogonSoftTokenPasscode;
                        }
                    }
                    hid.value = window.external.WebLogonSoftTokenError;
                }catch(e){ }
            }
        }
*/
        // support for autologon from Client API
        function checkExternalAddCheckbox(){
            try {
                if( !GLB.ecCompartible ){
                    if ( !isU(window.external) && !isU(window.external.WebLogonNotifyUser) && !isU(window.external.WebLogonNotifyUser) ){
                        window.external.WebLogonNotifyUser();
                    }
                    return;
                }
                //
                if( !isU(window.external) ){
                    // push values
                    if( window.external.WebLogonUserName && GLB.is[0].inps[0].value == "" ){
                        GLB.is[0].inps[0].value = window.external.WebLogonUserName;
                    }
                    if( window.external.WebLogonPassword && GLB.is[1].inps[0].value == "" ){
                        GLB.is[1].inps[0].value = window.external.WebLogonPassword;
                        GLB.is[1].inps[1].focus();
                    }

                    if( window.external.WebLogonSavePasswordAvailable ){
                        // create checkbox
                        changeHeight( 2 );
                        var ht = { li: null, label: null, c2: documet.getElementById("field-container-2") }
                        ht.li = GLB.ul.insertBefore( celm( { tag: "li", id: "field-container-3", className: "field-container" } ), ht.c2 );
                        ht.label = ht.li.appendChild( celm( { tag: "label", className: "checkbox", id: "label-3" } ) );
                        ht.label.appendChild( document.createTextNode( "Save Password" ) );
                        GLB.savePwChk = ht.li.appendChild( celm( { tag: "input", type: "checkbox", className: "checkbox", value: 1, checked: window.external.WebLogonSavePasswordChecked } ) ); // name: ???
                        if( GLB.savePwChk.autocomplete ) { GLB.savePwChk.autocomplete = "off"; }
                    }
                    // autosubmit
                    if( window.external.WebLogonAutoLogon && !GLB.doNotAutoSubmit ){
                        GLB.doAutoSubmit = true;
                        GLB.form.onsubmit(); //???
                        GLB.form.submit();
                        return;
                    }
                }
            }catch(e){}
        }

        function masterSubmit(){
            
            var uname = $("#field-1").val().trim();
            $("#field-1").val(uname);
            $('#SubmitCreds').html('Logging In <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate" style="margin-left: 3px"></span>');
            $('#SubmitCreds').attr("disabled", "disabled");

            if( !verifyNewPassword() ){ return false; }
            OnSubmit(); // this required by edge

            if ( GLB.restartOnSubmit ) {
                try {
                    window.external.WebLogonAutoLogon = ( GLB.is[0].inps[0].value == "" && GLB.is[1].inps[0].value == "" );
                    window.external.WebLogonResetSession(); // restart session
                }catch (e) {}
                return false;
            }
            // disable submit
            if( GLB.submit ){ GLB.submit.disabled = true; }
            return true;
        }

        function OnSubmit(){
            try{
                if( window.external && GLB.ecCompartible ){
                    if( !isU( window.external.WebLogonUserName ) ){ window.external.WebLogonUserName = GLB.is[0].inps[0].value; }
                    if( !isU( window.external.WebLogonPassword ) ){ window.external.WebLogonPassword = GLB.is[1].inps[0].value; }
                    if( !isU( window.external.WebLogonSavePasswordChecked ) && GLB.savePwChk ){ window.external.WebLogonSavePasswordChecked = GLB.savePwChk.checked; }
                }
                if ( SFT.fieldId ) { SFT.onEcSubmit(); }
            }catch(e){}
        }

        function verifyNewPassword(){
            try{
                if( GLB.inputs >= 2 && GLB.is[0].name == "_F5_challenge" && GLB.is[0].type == "password"
                    && GLB.is[1].name == "_F5_verify_password" && GLB.is[1].type == "password" ){
                    if( GLB.is[0].inps[0].value != GLB.is[1].inps[0].value ){
                        alert("Password and confirmation do not match.");
                        GLB.is[0].inp[0].focus();
                        return false;
                    }else{
                        // Not sending the second field.
                        GLB.is[0].inp[0].disabled = true;
                        if( window.external && !isU( window.external.WebLogonPassword ) ){
                            window.external.WebLogonPassword = GLB.is[0].inp[0].value;
                        }
                    }
                }
            }catch(e){}
            return true;
        }

        function dontChangePasswordClick(){
            var dcpwdChk = document.getElementById("field-dcpwd"); // debugger; what name?
            if( dcpwdChk && dcpwdChk.checked ){
                GLB.is[0].inp[0].value = GLB.is[1].inp[0].value = ""; // password.x = verify.x = ???
                GLB.is[0].inp[0].disabled = GLB.is[1].inp[0].disabled = true;
            }else{
                GLB.is[0].inp[0].disabled = GLB.is[1].inp[0].disabled = false;
            }
        }
    </script>
    
    
</head>
<body cz-shortcut-listen="true" style="">
<script src="./Central Michigan University Login _ Central Michigan University_files/Duo-F5-BIG-IP-v2.js"></script>
    <div class="container">
        <!-- maroon bar -->
        <div id="maroonBar" class="row one">
            <div class="col-md-12 maroonBar">
                <div class="tinyCmich"><a href="https://www.cmich.edu/"></a></div>
            </div>
            <!-- /maroonBar -->
        </div>
        <!-- gold bar -->
        <div id="goldBar" class="row two">
            <div class="col-md-12 goldBar"></div>
        </div>
        <div class="row three header">
            <div class="col-md-12 siteBanner">
                <div class="container-narrow bannerInner">
                    <div class="cmuWordmark">
                        <a href="https://www.cmich.edu/" title="Central Michigan University Wordmark">
                    		<div class="cmuWordmarkImage"></div>
							<span class="sr-only">CMich.edu</span>
						</a>
                    </div>
                    <div class="cmichBanner">
                        <a href="https://www.cmich.edu/" title="cmich.edu">
                            <div class="cmichBannerImage"></div>
                            <div class="cmichBannerImageMobile"></div>
							<span class="sr-only">CMich.edu Banner</span>
                        </a>
                    </div>
					<div class="headerSocialMedia">
						<ul>
							<li>
								<a title="Facebook" href="https://www.facebook.com/cmich">
									<div class="facebookButton">
										<i class="icon-cmich-facebook" aria-hidden="true"></i>
										<span class="sr-only">Facebook Icon</span>
									</div>
								</a>
							</li>
							<li>
								<a title="Twitter" href="https://twitter.com/CMUniversity">
									<div class="twitterButton">
										<i class="icon-cmich-twitter" aria-hidden="true"></i>
										<span class="sr-only">Twitter Icon</span>
									</div>
								</a>
							</li>
							<li>
								<a title="YouTube" href="https://www.youtube.com/gocmich">
									<div class="youtubeButton">
										<i class="icon-cmich-youtube3" aria-hidden="true"></i>
										<span class="sr-only">Youtube Icon</span>
									</div>
								</a>
							</li>
							<li>
								<a title="Instagram" href="https://instagram.com/cmuniversity/">
									<div class="instagramButton">
										<i class="icon-cmich-instagram" aria-hidden="true"></i>
										<span class="sr-only">Instagram Icon</span>
									</div>
								</a>
							</li>
						</ul>
					</div>					
                </div>
            </div>
        </div>
        <div id="gradientBar" class="row four">
            <div class="col-md-12 goldGradient">
            </div>
        </div>
        <div class="row five">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-4 col-md-offset-4">
                        <div id="formWrap" class="formWrap">
                            <h2 class="loginTitle">Login Page</h2>
                                                        <form id="f5-logon-auth" name="e1" method="post" action="https://sso.cmich.edu/my.policy" onsubmit="return masterSubmit();" autocomplete="off" role="form" style="width: 100%;">
                            <table id="credentials_table" style="width: 100%">
                            <tbody><tr style="display: none;">
                                <td colspan="2" id="credentials_table_header">Central Michigan University<br>MFA Pilot</td>
                            </tr>
                            <tr style="display: none;">
                                <td colspan="2" id="credentials_table_postheader"></td>
                            </tr>
                            <tr>
                                <td>
                                <div class="form-group"><label class="control-label" for="field-1">Global ID</label><input tabindex="1" type="text" class="form-control" id="field-1" placeholder="Global ID" name="username"></div>	
<div class="form-group"><label class="control-label" for="field-2">Password</label><div class="input-group"><input tabindex="2" type="password" class="form-control" id="field-2" placeholder="Password" name="password"><span class="input-group-btn"><button id="showPassword" class="btn btn-default" type="button" title="Show/Hide Password"><i class="icon-cmich-eye" aria-hidden="true"></i></button></span></div></div>	
                                <div class="form-group">
                                    <button tabindex="3" class="btn btn-default" id="SubmitCreds" type="submit">Log In</button>
                                </div>
                                <div id="forgotPassword" class="forgotPassword">
                                    Forgot your password? <a href="https://it.cmich.edu/reset-password">Reset it here!</a><br>
                                    Need help?<a href="https://it.cmich.edu/get-help"> Contact the Help Desk!</a>
                                    <br>
                                    New to CMU? <a id="activateLink" href="https://it.cmich.edu/new-account">Activate your account!</a>
                                </div>
								<input type="hidden" id="gotoUrl" name="gotoUrl" value="https://sso.cmich.edu/my.policy">
                                </td>
                            </tr>
                        </tbody></table>
                        </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row six">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-8 col-md-offset-2 footer">
                        <footer role="contentinfo">
                            <p>
                                <a href="https://www.cmich.edu/copyright">Copyright</a> Central Michigan University, Mount Pleasant, Mich. 48859 | Phone 989-774-4000 <br>
                                <a href="https://www.cmich.edu/office_president/OCRIE/affirmative-action-statements/Pages/default.aspx">Nondiscrimination Statement</a> | <a href="https://www.cmich.edu/privacy">Privacy Policy</a> | <a href="https://www.cmich.edu/ess/studentaffairs/SDS/Pages/Web-Accessibility-Notice.aspx">Web Accessibility Notice</a>
                            </p>
                        </footer>
                    </div>
                </div>
            </div>
        </div>
    </div>    
	<script src="./Central Michigan University Login _ Central Michigan University_files/jquery.min.js"></script>
	<script type="text/javascript" src="./Central Michigan University Login _ Central Michigan University_files/cmich-main.js"></script>
	<script type="text/javascript">
		$(function() {
            
            if(!!document.getElementById('field-2')) {
                var password = $('#field-2');
            } else {
                var password = $('#field-1');
                $('#forgotPassword').html('Need help?<a href="https://it.cmich.edu/get-help"> Contact the Help Desk!</a>');
            }
		
		var showPassword = $('#showPassword');
		var initialChange = false;
		
			password.on('input', function() {
				if(initialChange == false)
				{
					showPassword.removeAttr('disabled');
					initialChange = true;
				}
			});
			
			showPassword.click(function() {
					if(password.attr('type') == 'password') {
						password.attr('type','text');
						showPassword.children("i").removeClass('icon-cmich-eye').addClass('icon-cmich-eye-blocked');
					}
					else{
						password.attr('type','password');
						showPassword.children("i").removeClass('icon-cmich-eye-blocked').addClass('icon-cmich-eye');
					}			
				});
			
			$('#SubmitCreds').click(function() {
				password.attr('type','password');
			});

            var full_href = $(location).attr('href');
            
            $("#gotoUrl").val(full_href);
			
		});

        function isElementInViewport (el) {

            //special bonus for those using jQuery
            if (typeof jQuery === "function" && el instanceof jQuery) {
                el = el[0];
            }

            var rect = el.getBoundingClientRect();

            return (
                rect.top >= 0 &&
                rect.left >= 0 &&
                rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */
                rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */
            );
        }

        if (! isElementInViewport(document.getElementById('activateLink'))) {
            document.getElementById('gradientBar').style.display = 'none';
            document.getElementById('maroonBar').style.display = 'none';
            document.getElementById('goldBar').style.display = 'none';
            document.getElementById('formWrap').style.marginTop = '25px';
            
        }
	</script>
    <!-- /container -->










</body></html>